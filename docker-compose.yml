version: '3.8'

x-defaults: &defaults
  restart: unless-stopped
  env_file: .env

services:
  application:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["--storage-type", $STORAGE_TYPE, "--cache-type", "none"]
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:${REDIS_PORT}/${REDIS_DB}
    <<: *defaults

  postgres:
    image: postgres:14.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: *defaults

  redis:
    image: redis:7-alpine
    command: redis-server --port ${REDIS_PORT} --requirepass "${REDIS_PASSWORD}" --save 60 1 --loglevel warning
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - redis_data:/data
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    <<: *defaults

volumes:
  postgres_storage:
    driver: local
  redis_data:
    driver: local
